name: Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: murdermystery
          POSTGRES_USER: game
          POSTGRES_PASSWORD: pgpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and run backend
      env:
        DB_CONN_URL: postgresql://postgres:example@localhost:5432/postgres
        INFERENCE_SERVICE: groq
        MODEL: llama3-8b-8192
        API_KEY: ${{ secrets.API_KEY || 'default_api_key_for_development' }}
        MAX_TOKENS: 1000
      run: |
        docker build -t backend ./api
        docker run -d --name backend -p 10000:10000 \
          -e DB_CONN_URL -e INFERENCE_SERVICE -e MODEL -e API_KEY -e MAX_TOKENS \
          backend

    - name: Build and run frontend
      env:
        REACT_APP_API_URL: http://localhost:10000
      run: |
        docker build -t frontend ./web
        docker run -d --name frontend -p 3000:3000 \
          -e REACT_APP_API_URL \
          frontend

    # - name: Wait for backend service to start
    #   run: |
    #     timeout 30 bash -c 'while ! docker exec backend curl -s -o /dev/null -w ''%{http_code}'' localhost:10000/health | grep -q 200; do sleep 5; done'

    # - name: Wait for frontend service to start
    #   run: |
    #     timeout 30 bash -c 'while ! docker exec frontend curl -s -o /dev/null -w ''%{http_code}'' localhost:3000 | grep -q 200; do sleep 5; done'

    # - name: Run tests
    #   run: |
    #     # docker exec backend npm test
    #     # docker exec frontend npm test

    - name: Clean up
      if: always()
      run: |
        docker stop backend frontend
        docker rm backend frontend
